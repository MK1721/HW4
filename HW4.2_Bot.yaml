openapi: 3.0.0
info:
  title: Steam Support Chatbot API
  description: API for integrating and managing an AI-powered chatbot for Steam customer support.
  version: "1.0.0"
servers:
  - url: 'https://api.steampowered.com'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    ChatbotRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user
        query:
          type: string
          description: The user's query or issue
        timestamp:
          type: string
          format: date-time
          description: The time when the request was made
      required:
        - userId
        - query
      example:
        userId: "76561198006409530"
        query: "How can I reset my password?"
        timestamp: "2024-05-27T12:34:56Z"
    ChatbotResponse:
      type: object
      properties:
        responseId:
          type: string
          description: The ID of the response
        userId:
          type: string
          description: The ID of the user
        response:
          type: string
          description: The response generated by the chatbot
        timestamp:
          type: string
          format: date-time
          description: The time when the response was generated
      required:
        - responseId
        - userId
        - response
        - timestamp
      example:
        responseId: "resp12345"
        userId: "76561198006409530"
        response: "To reset your password, go to the following link..."
        timestamp: "2024-05-27T12:35:00Z"
    Ticket:
      type: object
      properties:
        ticketId:
          type: string
          description: The ID of the support ticket
        userId:
          type: string
          description: The ID of the user
        query:
          type: string
          description: The user's query or issue
        status:
          type: string
          description: The status of the support ticket
        timestamp:
          type: string
          format: date-time
          description: The time when the ticket was created
      required:
        - ticketId
        - userId
        - query
        - status
        - timestamp
      example:
        ticketId: "ticket12345"
        userId: "76561198006409530"
        query: "How can I reset my password?"
        status: "open"
        timestamp: "2024-05-27T12:34:56Z"
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: The error message
      example:
        error: "Invalid API key."
paths:
  /support/chatbot/query:
    post:
      tags:
        - Chatbot
      summary: Submit a query to the support chatbot
      description: Allows a user to submit a query or issue to the support chatbot.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatbotRequest'
      responses:
        '200':
          description: Successfully received query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatbotResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /support/chatbot/response:
    get:
      tags:
        - Chatbot
      summary: Retrieve the response from the support chatbot
      description: Allows a user to retrieve the response for a previously submitted query.
      parameters:
        - name: responseId
          in: query
          required: true
          schema:
            type: string
          example: 'resp12345'
      responses:
        '200':
          description: Successfully retrieved response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatbotResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Response not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /support/chatbot/ticket:
    post:
      tags:
        - Ticket
      summary: Create a support ticket
      description: Allows the chatbot to create a support ticket if the issue cannot be resolved automatically.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatbotRequest'
      responses:
        '201':
          description: Successfully created support ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /support/chatbot/ticket/{ticketId}:
    get:
      tags:
        - Ticket
      summary: Retrieve support ticket status
      description: Allows a user to retrieve the status of a support ticket.
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: string
          example: 'ticket12345'
      responses:
        '200':
          description: Successfully retrieved ticket status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Ticket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Ticket
      summary: Update support ticket status
      description: Allows the chatbot or a support agent to update the status of a support ticket.
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: string
          example: 'ticket12345'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: The new status of the ticket
              required:
                - status
              example:
                status: "resolved"
      responses:
        '200':
          description: Successfully updated ticket status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Ticket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Ticket
      summary: Delete a support ticket
      description: Allows the chatbot or a support agent to delete a support ticket.
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: string
          example: 'ticket12345'
      responses:
        '200':
          description: Successfully deleted ticket
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
                example:
                  message: "Ticket successfully deleted."
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Ticket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
